{
  "articles": [
    {
      "path": "about.html",
      "title": "Bayesian statistical world",
      "description": "Bayesian is the workplace for Gibbs sampler\n",
      "author": [],
      "contents": "\nGibbs Sampler involves working with conditional distributions - the core of Bayesian ideas. Let’s take a look at Bayesian World and how they are connected.\nBackground: Bayesian V.S. Frequentist\nFrequentist is the dominant philosophy and category in the modern statistical world. In fact, many concepts/ thinking/ logic we have been exposed from statistics are from Frequentist beliefs, such as “confidence interval”, “p-value”, “the true value of an unknown parameter”, etc. However, Gibb’s sampler is a method that applies conditional probability distribution, where the “conditioned” nature indicates its Bayesian flavor. This page serves as a refresher to get a taste of Bayesian Statistics - we will briefly talk about its knowledge building process of estimating unknown parameters, learn Bayes rule, and do a little exercise on deriving the posterior distribution of an unknown parameter.\nUnlike Frequentists who deem unknown parameters as unknown, fixed constants, Bayesians think about them as random variables and constantly changing their beliefs about unknown parameters based on the data we truly see - they start by proposing a possible probability distribution for the unknown parameter (prior distribution), and find out what they actually see from real data to update/ change the beliefs by deriving posterior distribution based on the prior distribution and data. Furthermore, by seeing more data, they continue to update their knowledge on the parameter (for example, shrink the parameter space/ support by lowering the plausibility of some values of which the parameter can take).\nWe can imagine the parameter is a Plasticine or modeling clay. When we buy a Plasticine from a store, it has its original shape (prior - the beginning hypothesis/ information we have about the parameter), and its shape constantly changes corresponding to the external forces applied (data we’ve seen so far). The resulted shapes are the posterior - the information we gained about parameter after seeing data.\nThe end goal of Bayesian estimation is not to see a convergence and shrinkage of parameter space and determine the most likely value of a parameter- that sounds like “Frequentist”. In Bayesian, we never end updating the knowledge based on data.\nSounds like there is lots of “based on”, “dependent on”, and “after seeing…” in Bayesian - YES, this explains why our topic of Gibbs Sampling is contextualized on Bayesian side - Gibbs sampler involves with working with conditional distributions.\nFigure below illustrates Bayesian knowledge-building process: Johnson, A. et.al. If we heard from many 5-star reviews from a restaurant that you are going to visit, we may start expecting it to be a 5-star restaurant.\nYou sit down, and they serve you a really soggy noodles, you’d be upset and surprised - at the same time, you overthrow your previous assumption about the restaurant and thought it was really just a 3-star level. Then, they serve you a really yummy dish and you change your impression back to 4-star as for now…\nAn simplification of Bayesians thinking processThrough observing and changing, Bayesians are giving themselves more flexibility of estimating parameters of interest. They do estimations based on “Bayes rule” - a central idea and foundation of Bayesian statistics.\nBayes Rule\nConnecting back to probability terms, let’s remind ourselves the Bayes rule of two events \\(A\\) and \\(B\\), generalized by equation below:\n\\[\nP(A| B )= \\frac{P(A\\cap B)} {P(B)}=\\frac{P(B|A)P(A)}{P(B)}\n\\]\nwhere:\n\\(P(A)\\) and \\(P(B)\\) are the independent probabilities that they happen\n\\(P(A\\cap B)\\) is the probability that both A and B happen\n\\(P(B|A)\\) is the conditional probability given A happens\nBy knowing the independent probabilities of \\(A\\) and \\(B\\), and seeing the probability of \\(B\\) happens given A happens, we can derive what do we know about \\(A\\) given B.\nIn Bayes, \\(A\\) will reflect our known parameters, and \\(B\\) will reflect our data. Let’s take a further step to see how this connects to probability distribution as a whole.\nUse Bayes rule in probability distribution\nSuppose we are interested in the unknown parameter \\(\\theta\\). How do we update our guess?\nFirst, We start by proposing a prior distribution to the unknown parameter \\(\\theta\\): denote this as \\(p(\\theta)\\) if discrete or \\(f(\\theta)\\) if continuous. For example, if \\(\\theta\\) represents a probability, then one may suggest their prior to be \\(\\theta \\sim Unif(0,1)\\). There is no right or wrong/ good or bad judgment calls to priors- they are completely subjective and based on personal knowledge/ background research to the parameter.\nNext, we will incorporate our data by calculating the likelihood of seeing a sequence of observations \\(\\vec{X}\\) under \\(\\theta\\): denoted as \\(f(\\vec{X}|\\theta)\\).\nThirdly, We are interested in posterior distribution of the parameter - update! Denote this as \\(g(\\theta|\\vec{X})\\) to differentiate the updated distribution.\nAccording to the Bayes rule, we can calculate the posterior distribution \\(g(\\theta|\\vec{X})\\) by (suppose \\(X, \\theta\\) are both continuous random variables):\n\\[\ng\\left(\\theta \\mid \\vec{X} \\right) =\\frac{f\\left(\\vec{X} \\mid \\theta\\right) f(\\theta)}{f(\\vec{X})}\n\\]\nwhere \\(f\\left(\\vec{X} \\mid \\theta\\right)\\) is the joint pdf/ likelihood given \\(\\theta\\) and the denominator \\(f(\\vec{X})\\) is the marginal pdf of \\(\\vec{X}\\).\nNotice that the posterior distribution of \\(\\theta\\) does not depend on \\(\\vec{X}\\), that leads us to a convention in deriving the posterior distribution \\(g(\\theta \\mid \\vec{X})\\) because we can ignore the actual composition of \\(f(\\vec{X})\\) as it only serves as the normalizing constant in deriving a pdf for a random variable. Therefore:\n\\[\ng\\left(\\theta \\mid \\vec{X} \\right) \\propto {f\\left(\\vec{X} \\mid \\theta\\right) f(\\theta)}\n\\]\nNote that the pdf of posterior distribution of \\(\\theta\\) is not equal to the right hand side - we still need the marginal pdf of \\(\\vec{X}\\) to calculate the exact pdf. But the above equation gives us the kernels in a pdf - they are sufficient enough to let us find out the posterior distribution of \\(\\theta\\).\nExercise: deriving posterior distribution for \\(\\theta\\)\nLet’s try a simple example (from Dr. Kelsey Grinde’s in class material on Bayesian Statistics). Suppose we observed one random observation of a coin flip, \\(X\\sim Bern(p)\\), and we are interested in \\(p\\), where we assume its prior distribution: \\(p \\sim Beta (a,b)\\). We derive the posterior distribution \\(g(p \\mid X)\\):\n\\[\n\\begin{aligned}\ng(p|X)  &\\propto f(X\\mid p) f(p)\\\\\n&= [p^X (1-p)^{1-X}] \\quad [\\frac{\\Gamma(a+b)}{\\Gamma(a)\\Gamma(b)} p^{a-1} (1-p)^{b-1}]\\\\\n& \\propto p^X(1-p)^{1-X} p^{a-1}(1-p)^{b-1} \\\\\n& =p^{X+a-1}(1-p)^{1-X+b-1} \\\\\n& p \\mid X \\sim \\operatorname{Beta}(X+a, 1-X+b) \\\\\n&\n\\end{aligned}\n\\]\nWe only conserve terms with \\(p\\) and dump anything else such as constants \\(a, b\\). Notice how \\(a,b, X\\) and the number of trial (1 in this case since we only have one random observation) are incorporated into the posterior distribution.\nThe example above works with single unknown parameter \\(p\\), and Gibbs sampling works with Bayesian to obtain posterior samples of multiple unknown parameters (many dimensions). Furthermore, it is noteworthy that Gibbs is only applied to situations when we have multiple unknown parameters and it is hard to calculate the joint, posterior distribution of all parameters using the method above (so we do not have a single posterior distribution, but many - this means we cannot derive i.i.d. samples but dependent samples), and it is easier/ feasible to derive their individual conditional posterior distributions. We will learn about it more on the next page!\n\n\n\n",
      "last_modified": "2023-04-29T22:14:00-05:00"
    },
    {
      "path": "gibbs.html",
      "title": "Gibbs Sampling",
      "description": "Some additional details about the website\n",
      "author": [],
      "contents": "\nBackground\nProbability Refresher\nGibbs sampling is used for multivariate distributions, or distributions that depend on more than one variable. Two types of multivariate distributions are joint and conditional.\nJoint Probability Distribution - probability based on two independent variables (ex. p(x, y))\nConditional Probability Distribution - variables are dependent on each other (ex. p(x) given Y = y)\nJoint vs Conditional DistributionsMarkov Chain Monte Carlo (MCMC)\nMarkov Chain Monte Carlo is used to estimate probabilities by simulating repetitions of an experiment. It is usually used in situations where an exact probability is difficult to calculate. [Larsen & Marx, 2018]\nMCMC: Metropolis Hastings\nMetropolis Hastings is a classic MCMC method used to obtain a sequence of random samples where the direct distribution is hard to find. In this method, a proposed distribution is utilized to sample new states. At each iteration, a new state is proposed. Gunderson, 2020\nMetropolis Hastings also utilizes an acceptance rate. When you get a random sample, a probability equation is used to decide whether or not to accept the new, proposed values. Gibbs Sampling is a special case of Metropolis Hastings with conditional distributions and an acceptance rate = 1. This means that in Gibbs Sampling, the new proposed state is accepted 100% of the time. Jingyi Jessica Li\nConcept\nGibbs Sampling is a Markov Chain Monte Carlo (MCMC) method that that is used for multidimensional models. Gibbs is used when sampling using joint distributions is too difficult, but it is easy to sample from conditional probabilities.\nGibbs Sampling Definition Suppose we want to obtain \\(n\\) samples of \\(X = (x_1, x_2, x_3, ..., x_m)\\) from a joint distribution \\(p(x,y)\\).\nIn Gibbs sampling, we will sample each \\(x^m\\) conditional on others, that is, in iteration \\((n+1)\\):\n\\[\n\\begin{aligned}\nx_{n+1}^{(1)}&\\sim P(x^{(1)}|x_n^{(2)},x_n^{(3)},...,x_n^{(m)}) \\\\\nx_{n+1}^{(2)}&\\sim P(x^{(2)}|x_{n+1}^{(1)},x_n^{(3)},...,x_n^{(m)}) \\\\\nx_{n+1}^{(m)}&\\sim P(x^{(m)}|x_{n+1}^{(1)},...,x_{n+1}^{(m-1)})\n\\end{aligned}\n\\]\nIn Practice\n1. Set \\((x_0,y_0)\\) to some starting value.\n2. Sample \\(x_1 \\sim p(x|y_0)\\). Alternatively, \\(X|Y = y_0\\). This produces \\((x_1, y_0)\\).\n3. Then, sample \\(y_1 \\sim p(y|x_1)\\) to arrive at the second point in the distribution \\((x_1,y_1)\\)\n4. Repeat steps 2 and 3, \\(n\\) times.\nThis produces a sequence of pairs of random variables, \\((X_0,Y_0),(X_1,Y_1),(X_2,Y_2),...\\), which satisfies the property of being a Markov chain. Note that the conditional distribution of \\((X_i,Y_i)\\), given all the previous pairs, only depends on \\((X_{i-1},Y_{i-1})\\) Steorts\nIn a Bayesian Perspective\nGibbs Sampling can be used to simulate a Markov chain distribution of unknown parameter \\(\\theta\\). Let’s call this distribution \\(\\pi (\\theta)\\).\nInitial conditions\nSuppose \\(\\theta\\) may be partitioned into \\(\\theta = (\\theta_1,...,\\theta_r)\\)\nIt is then possible to simulate a random value of \\(\\theta_i\\) from a full conditional distribution \\(\\pi(\\theta_i | \\theta_1, \\theta_2, ..., \\theta_{i-1},\\theta_{i+1},...,\\theta_r)\\) for \\(i = 1, 2, ...\\)\n\nUse initial conditions to simulate the distribution \\(\\pi (\\theta)\\)\nStart with initial values \\(\\theta^{(0)} = (\\theta_1^{(0)},...,\\theta_r^{(0)})\\)\nThen, use the following steps for \\(m = 1, 2, ...\\):\nStep 1: Sample \\(\\theta_1^{(m)}\\) from \\(\\pi(\\theta_1 | \\theta_2^{(m-1)}, \\theta_3^{(m-1)},..., \\theta_4^{(m-1)})\\)\nStep 2: Sample \\(\\theta_2^{(m)}\\) from \\(\\pi(\\theta_2 | \\theta_1^{(m)}, \\theta_3^{(m-1)},..., \\theta_d^{(m-1)})\\)\nStep r: Sample \\(\\theta_r^{(m)}\\) from \\(\\pi(\\theta_r | \\theta_1^{(m)}, \\theta_2^{(m)},..., \\theta_{r-1}^{(m)})\\)\n\nBy the Monte Carlo rules, it is easy to show that if \\(\\theta^{(m-1)}\\sim \\pi(\\theta)\\), then \\(\\theta^{(m)}\\sim \\pi(\\theta)\\), and thus is the distribution \\(\\pi (\\theta)\\). Pritchard et al., 2000\nProperties\nMixing Rate: refers to how quickly the sample averages converge\nIndicates converging to a reasonable probability distribution\nA faster mixing rate means that the algorithm “mixes well”\nBurn-In: property of Metropolis Hastings MCMC\nIt takes a few trials to converge to a reasonable probability distribution\nMust discard the first “B” samples that do not represent the data well\nFirst “B” samples are referred to as the burn-in period\nA good model will have a small burn in period\nLimitations\nSome potential limitations and situations where Gibbs sampling can’t be used would be in situations where there are areas of extremely high probability or of extremely low probability. By the nature of conditional probability distributions, if the current point lands in a high probability region, the next point won’t move. This is because it is solely dependent on the previous point, and the entire sample space will be limited to this very high probability peak.\nOn the other hand, in a low probability region, you won’t be able to find any higher probability regions either. This is because sampling fails when it comes across a region where probability = 0. If the probability of any data being at a certain value in a dimension is zero, then you won’t be able to sample a new point in that dimension because the entire sample space will also have a probability of zero.\nA simulation example: Exponential and gamma model\nSet up\nConsider an exponential model for our random observation\n\\(X_1,...,X_n \\stackrel{iid}{\\sim} \\text{Exponential}(ab)\\) (where the\nparameter \\(\\lambda\\) is the product of \\(a\\) and \\(b\\)):\n\\[p(X_i|a,b) = abe^{-abx} \\quad \\text{for} (x>0)\\] \\(a\\) and \\(b\\) is our\nunknown parameters. Now, suppose we put the following independent\npriors on \\(a\\) and \\(b\\): \\[a{\\sim} \\text{Gamma}(1,1)\\]\n\\[b{\\sim} \\text{Gamma}(1,1)\\]\nRecall from probability: If random variable A has Gamma(1,1)\ndistribution, it has the pdf: \\(f_A(a) = e^{-a}\\).\nTherefore, since \\(a\\) and \\(b\\) are independent priors, we can calculate\njoint distribution of our prior by simply multiplying their pdfs\ntogether:\n\\[p(a,b) = e^{-a-b} \\quad \\text{for} (a,b>0)\\]\nWhy is conditional distribution easier than joint?\nRemember: our unknown parameters/ interests are \\(a\\) and \\(b\\).\nTo start with, given the above, we really want to know what the joint\nposterior distribution of \\(p(a,b|X)\\) looks like. Unfortunately, however,\nwe can’t. In fact, Kristy and Regan are going to claim that, instead of\ndirectly sampling from the joint posterior distribution\n\\(p(a,b|\\vec{X})\\), it is easier to sample from conditional distributions:\n\\(p(a|\\vec{X},b)\\) and \\(p(b|\\vec{X},a)\\). (vector \\(X\\) just means we are\ninterested at a random sample - a bunch of \\(X_i\\)s.)\nWhy? Let’s write out their formulas:\nJoint (hard!):\n\\[\np(a,b|\\vec{X})=\\frac{p(a,b,\\vec{X})}{p(\\vec{X})}\n\\]\nConditional (easy!):\n\\[\np(a|b,\\vec{X}) = \\frac{p(a,b,\\vec{X})}{p(b,\\vec{X})}\n\\]\nNote that they’re both proportional to the whole, joint distribution\n\\(p(a,b,\\vec{X})\\). Let’s calculate this: \\[\n\\begin{aligned}\np(a,b,\\vec{X})&= p(\\vec{X}|a,b)*p(a,b)\\\\\n&=\\Pi_{i=1}^n p(X_i|a,b) * e^{-a-b}  \\\\\n&= \\Pi_{i=1}^n abe^{-abx_i} * e^{-a-b} \\\\\n&= (ab)^n e^{-ab\\sum_{i=1}^nx_i}* e^{-a}*e^{-b} \\\\\n&= (ab)^n e^{-a(b\\sum_{i=1}^nx_i+1)}* e^{-b}\n\\end{aligned}\n\\] Let’s start with the conditional distribution \\(p(a|b,\\vec{X})\\) that\nworks:\n\\[\n\\begin{aligned}\np(a|b,\\vec{X}) &\\propto p(a,b,\\vec{X})\\\\\n&=(ab)^n e^{-a(b\\sum_{i=1}^nx_i+1)}* e^{-b}\\\\\n&\\propto a^ne^{-a(b\\sum_{i=1}^nx_i+1)} \\quad \\quad\\text{dump b-related terms}\\\\\n\\end{aligned}\n\\]\nThis is a Gamma distribution!\n\\[\na|b,\\vec{X}\\sim \\text{Gamma}(n+1,b\\sum_{i=1}^nx_i +1)\n\\]\nSymmetrically, the conditional distribution of \\(b\\) is the same: \\[\nb|a,\\vec{X} \\sim \\text{Gamma}(n+1,a\\sum_{i=1}^nx_i +1)\n\\]\nWhat about our joint, posterior distribution \\(p(a,b|\\vec{X})\\)? \\[\n\\begin{aligned}\np(a,b|\\vec{X}) &\\propto p(a,b,\\vec{X})\\\\\n&=(ab)^n e^{-a(b\\sum_{i=1}^nx_i+1)}* e^{-b}\\\\\n\\end{aligned}\n\\] We can’t dump any terms, and this does not look familiar.\nGetting to Gibbs\nRelating back to Gibbs sampling, since we have two dimensions \\(a\\) and\nb$, our Gibbs samples are: \\((a_0, b_0)\\), \\((a_1, b_1)\\), \\((a_2, b_2)\\),\n…… \\((a_n, b_n)\\), where the \\(n^{th}\\) sample \\((a_n, b_n)\\), will always\ndepend on the previous one \\((a_{n-1}, b_{n-1})\\), forming a Markov Chain.\nWe draw samples as:\n1. Choose the initial sample \\((a_0, b_0)\\)\n2. Draw \\(a_1\\sim p(a|b_0,\\vec{X})\\), \\(b_1\\sim p(b|a_1,\\vec{X})\\) - this is\n\\((a_1, b_1)\\)\n3. Draw \\(a_2\\sim p(a|b_1,\\vec{X})\\), \\(b_2\\sim p(b|a_2,\\vec{X})\\)\nThis means, after seeing some data \\(\\vec{X}\\), where we said\n\\(X_i\\sim \\text{Exponential}(ab)\\), we will continuously draw posterior\nsamples, from two dimensions \\(a\\) and \\(b\\), based on the following\ndistribution (\\(N=\\) number of random observation of \\(X\\), \\(j=\\) times of\niteration):\n\\[\na_{j+1}|b_{j},\\vec{X}\\sim \\text{Gamma}(N+1,b_j\\sum_{i=1}^nx_i\n+1)\n\\]\n\\[\nb_{j+1}|a_{j+1},\\vec{X}\n\\sim \\text{Gamma}(N+1,a_{j+1}\\sum_{i=1}^nx_i +1)\n\\]\n(continued) R: Gibbs Sampler\nThe following content is adapted from Dr. Grinde’s in class activity on\nGibb’s sampling. Here are the conditional distributions if needed:\n\\[\na_{j+1}|b_{j},\\vec{X}\\sim \\text{Gamma}(N+1,b_j\\sum_{i=1}^Nx_i\n+1)\n\\]\n\\[\nb_{j+1}|a_{j+1},\\vec{X}\n\\sim \\text{Gamma}(N+1,a_{j+1}\\sum_{i=1}^Nx_i +1)\n\\]\nSet up\n\n\nset.seed(1)\n# true data distribution\nN <- 100  # 100 Xi observations\ntruea <- 3\ntrueb <- 4\nX <- rexp(n = N, truea*trueb) #create 100 observations where X~exp(ab)\n\nXsum = sum(X) # for later use\n\n# set up priors (mean)\na0 <- mean(rgamma(1000, shape = 1, rate = 1))\nb0 <- mean(rgamma(1000, shape = 1, rate = 1))\n\n\nWe are setting up our data distribution to be an exponential distribution with \\(\\lambda = ab\\). In our data, we are setting the true value of \\(a = 3\\) and the true value of \\(b = 4\\). Additionally, we are setting up our priors that we have previously calculated. Next, we need to choose starting values for our Gibbs sampler. It is important to choose a starting point that is reasonably close to our true values. Therefore, we decided to use the mean of our priors, \\(a_0\\) and \\(b_0\\), to be our starting values.\n\n\nset.seed(1)\n# store posterior samples of a and b\nalphas <- c()\nbetas <- c()\n\n# input a0, b0\n# we are choosing the starting points to be the mean of our prior distribution\nalphas[1] <- a0\nbetas[1] <- b0\n\n# choose how many iterations of Gibbs sampling to run\nj <- 1000\n\n\nNote that we now choose our average prior values as our initial sample \\((a_0, b_0)\\) as our initial sample. We are drawing 100 iid observations of \\(X_i\\)s and running our Gibbs Sampling for 1000 iterations (\\(j\\)).\nOur sampler will start at our initial values \\(a_0,b_0\\). Then, it will update through 1000 iterations. Since we already know that \\((a=3, b=4)\\) are the “correct” values for \\((a,b)\\), we can predict that our Gibbs sampling will fluctuate around these values.\nRun!\n\n\nset.seed(1)\n# run for j (1000) iterations\n\nfor(i in 2:j){\n# update a and b\na <- rgamma(n = 1, shape = N+1, rate = betas[i-1]*Xsum + 1)\nalphas[i] <- a\n\nb <- rgamma(n = 1, shape = N+1, rate = alphas[i]*Xsum + 1)\nbetas[i] <- b\n}\n\n\nVisualizations\n\n\nset.seed(1)\n# Histogram of samples\npar(mfrow=c(1,2))\nhist(alphas, xlab = expression(alpha), main = '')\nhist(betas, xlab = expression(beta), main = '')\n\n\n\nThis looks correct because our true values of \\(a\\) and \\(b\\) are 3 and 4 respectively.\nTrace Plot: the behavior of the samples over j iterations:\n\n\nset.seed(1)\niterations <- 1:j\npar(mfrow=c(1,2))\nplot(alphas ~ iterations, xlab = 'Iteration', ylab = expression(alpha), type = 'l')\nabline(h = a0, col = \"red\")\ntext(x=850, y= a0 + 0.5, 'a0', col = \"red\")\nabline(h = truea, col = \"blue\")\ntext(x=850, y=truea-0.5, 'True a', col = \"blue\")\nplot(betas ~ iterations, xlab = 'Iteration', ylab = expression(beta), type = 'l')\nabline(h = b0, col = \"red\")\ntext(x=850, y=b0 + 0.5, 'b0', col = \"red\")\nabline(h = trueb, col = \"blue\")\ntext(x=850, y=trueb+0.5, 'True b', col = \"blue\")\n\n\n\nAnalyzing algorithm performance\nFrom observing the trace plot above, what can we say about our Gibbs Sampler’s performance? What factors do you think that are involved in\nshaping the trace plots?\nANSWERS:\nFrom observing our trace plots, we can say that our Gibbs Sampler is a good simulation to find our true values. We can see that even though it starts at our initial values, it quickly jumps to fluctuate around our true values. We could say that there is a burn in period of about 100 trials for both parameters because it takes about 100 trials to converge around the true values.\nMany factors can determine our trace plots. Observed data (“Xsum”), (the way of choosing) the starting values of both parameters, sample size (“\\(N\\)”), number of\niterations (“\\(j\\)”) - if we run for enough long time, the samples will\nconverge and starting value does not matter that much. If we choose\nwisely on starting value, it may take us less time to see that the\nvalues \\(a\\) and \\(b\\) converge (greater mixing rate: evidence of a good\nMCMC algorithm performance) and their trace plots become stable.\nNoting that fluctuations are not necessarily bad. Mixing rate, which is\nhow fast that sample averages coverage, determines MCMC performance.\nOur trace plots could be improved by changing the initial starting\nvalues, \\((a_0, b_0)\\), and factors mentioned above all come in to play in\ndetermining the convergence shape of the trace plots.\nExploring\nWe can also observe what our trace plots would look like under less ideal conditions.\nDifferent starting values\nFor example, what would happen if we choose a starting value that was very far away from our true \\(a\\) and \\(b\\)? In this trial, we set \\(a\\) and \\(b\\) to each start at 100.\nHigh Starting Point: a = 100, b = 100\nLet’s check the mean and median of these posterior samples, and compare them with our true values of \\(a=3\\) and \\(b=4\\)\n\n\n# the mean and median of posterior samples\nc(mean(alphas[20:1000]),median(alphas[20:1000]))\n\n[1] 3.234724 3.042965\n\nc(mean(betas[20:1000]),median(betas[20:1000]))\n\n[1] 3.979042 3.758907\n\nOn the other hand, what happens if we pick a pair of extremely small starting points?\nLow Starting Point: a = 0.0001, b = 0.0001\nLet’s check the posterior mean and median again:\n\n\n# the mean and median of posterior samples\nc(mean(alphas[100:1000]),median(alphas[100:1000]))\n\n[1] 3.153170 2.988194\n\nc(mean(betas[100:1000]),median(betas[100:1000]))\n\n[1] 4.052377 3.808682\n\nIn both extremes, our Gibbs Sampler has a good mixing rate and fluctuates around the true values for \\(a\\) and \\(b\\) after approximately 100 trials (this is by eyeballing - we should really look in depth at the cut off of burn in if we want to be more precise).\nDifferent prior distributions\nAnother place to explore would be if we used a different prior. In our model, we used a joint prior of \\(p(a,b) = e^{-a-b} \\quad \\text{for} (a,b>0)\\) with individual priors \\(a {\\sim} \\text{Gamma}(1,1)\\) and \\(b{\\sim} \\text{Gamma}(1,1)\\). Hypothetically, what if our priors had higher rates?\\[a{\\sim} \\text{Gamma}(1,5)\\]\n\\[b{\\sim} \\text{Gamma}(1,5)\\]\nThis would change our conditional distributions to be:\n\\[\na|b,\\vec{X}\\sim \\text{Gamma}(n+1,b\\sum_{i=1}^nx_i +5)\n\\]\n\\[\nb|a,\\vec{X}\\sim \\text{Gamma}(n+1,a\\sum_{i=1}^nx_i +5)\n\\]\nChanging Priors to Gamma(1,5)With a different prior distribution of \\(a\\) and \\(b\\), we can see that our Gibbs Sampler isn’t as good. While it manages to converge and fluctuate around the true \\(a\\) value, it hasn’t begun fluctuating around the true \\(b\\) value, even after 1000 trials.\nMain Takeaways\nGibbs Sampling is a great tool for simulating distributions of multivariate models when the joint distribution is too difficult to work with, but it is easy to sample from conditional probabilities.\nA well-performed Gibbs Sampler will have a high mixing rate and a low burn-in period.\nWhile it is not vital to choose a starting point near the true value, it is important that you have priors that reasonably match the data that you are trying to model. Otherwise, a Gibbs Sampling simulation may not find the correct values - remember that the priors are selected subjectively so it is important to carry more background research and choose wisely.\n\n\n\n",
      "last_modified": "2023-04-29T22:14:03-05:00"
    },
    {
      "path": "index.html",
      "title": "Mathematical Statistics: Gibbs Sampling",
      "description": "Welcome to the website. This website introduces Gibbs Sampling in Bayesian statistics world. This is a class project from course MATH/ STAT 455: Mathematical Statistics at Macalester College. The contents in this blog are collaborative efforts from Kristy Ma and Regan Brodine.\n",
      "author": [],
      "contents": "\nHi!\nWelcome to our project page on Gibbs Sampling - an example of Markov chain Monte Carlo (MCMC) algorithms that uses conditional probabilities to iteratively draw posterior samples for estimating the probabiltiy distribution of unknown parameters.\nOur motivation: Gibbs sampling connects to our class because it is a sampling method used in Bayesian statistics. While frequentist statistics depend only on observed data, Bayesian statistics reflects both prior knowledge and observed data. When determining parameters in Bayesian statistics, it is labor intensive to compute the integration of multi-dimensional functions to estimate the posterior distribution.\nThis gives rise to Markov Chain Monte Carlo integration (MCMC), an easy way to generate dependent samples. Gibbs sampling is a type of MCMC-based numerical integration method that relies on conditional distributions. This technique also ties with a cool application in statistical genetics to infer genotypes in unknown population groups with Hardy Weinberg Equilibrium.\nAbout this page\nTo start exploring, simply navigate to tabs on the upper right corner:\n“Home”: This page\n“Intro to Bayesian”: Bayesian philosophy; Bayes rules; Posterior Exercise\n“Gibbs Sampling”: Gibbs Sampling Background; Properties and Limitations; Gibbs Sampling and MCMC; Simulation Example of Gibbs Sampler\n“Applications”: Gibbs Sampling in statistical genetics\n“Wrap-up”: Outro!\nLearning Goals:\nBe able to explain what Gibbs Sampling is and when to use it.\nIn addition to knowing the uses of Gibbs sampling, understand the limitations of Gibbs sampling, and what properties of trace plots evidence good performance.\nSimulate data from Gibbs sampling framework using R\nUnderstand that Gibbs sampling is a special scenario of Metropolis Hasting with acceptance rate = 1\nGet to know the application of Gibbs sampler in Statistical Genetics\nHave fun!\nIf you have any questions, please reach out to kristy20011001@gmail.com and rbrodine@macalester.edu. Thank you!\n\n\n\n",
      "last_modified": "2023-04-29T22:14:03-05:00"
    },
    {
      "path": "sim.html",
      "title": "Applying Gibbs Sampling",
      "description": "Gibbs Sampling can be used in population genetics research to build populations.",
      "author": [],
      "contents": "\nGibbs Sampling in statistical genetics\nOften times in population genetics research, it is useful to classify individuals in a sample into populations. While other areas of study may use factors like linguistic, cultural, or physical characters, it is not always easy to assign populations based on genotypes.\nPritchard et al. 2000 proposed a method to assign individuals to populations and simultaneously estimate allele frequencies: homozygous dominant, heterozygous, and homozygous recessive. This method can utilize various genetic markers as indication of alleles including SNPS, RFLPS, micro-satellites, etc. Additionally, they follow a few assumptions:\nAssumes markers are unlinked loci → can be drawn as independent samples\nAssumes Hardy Weinberg Equilibrium\nHardy Weinberg Equilibrium\n\\[p^2+2pq+q^2 = 1\\]\nWhere \\(p^2\\) is the homozygous dominant allele frequency, \\(2pq\\) is the heterozygous allele frequency, and \\(q^2\\) is the homozygous recessive allele frequency. By assuming Hardy Weinberg Equilibrium, we are stating that the genetic variation in a population will remain constant from one generation to the next.\nUnder these assumptions, each allele at each locus in each genotype is an independent draw from the appropriate frequency distribution.\nBuilding a Model\nAssume each population is modeled by a characteristic set of allele frequencies.\nLet X be the genotypes of sampled individuals (our data)\nLet Z be the unknown population of origin of individuals\nLet P be the unknown allele frequency in all populations\nInformation about P and Z is given by the posterior distribution:\n\\[\\begin{aligned}P(Z, P |X) &= \\frac{P(Z, P, X)}{P(X)} \\\\\n&\\propto P(P) P(Z) P(X|Z, P)\n\\end{aligned}\\]\nThis is a great opportunity to use Gibbs Sampling! It is not possible to sample from the posterior, \\(P(Z, P|X)\\), directly. We don’t know what \\(P(P)\\) or \\(P(Z)\\) are because they are our unknown variables. However, it is possible to use conditional sampling to build an approximate distribution: \\((Z_1,P_1), (Z_2, P_2), ..., (Z_n, P_n)\\).\nStart with randomly drawn initial value \\(Z_0\\) as a hypothetical population of origin and \\(P_0\\) as a hypothetical allele frequency. Then, iterate the following steps:\nSample \\(P_1\\) from \\(P(P | X, Z_0)\\)\nThis estimates allele frequencies for each population assuming population of origin for the individual is known.\n\nSample \\(Z_1\\) from \\(P(Z | X, P_1)\\)\nThis estimates the population of origin for each individual assuming that the population allele frequencies are known.\n\nContinue the pattern \\(n\\) times:\nSample \\(P_n\\) from \\(P(P | X, Z_{n-1})\\)\nSample \\(Z_n\\) from \\(P(Z | X, P_n)\\)\n\n",
      "last_modified": "2023-04-29T22:14:04-05:00"
    },
    {
      "path": "wrapup.html",
      "title": "Outro",
      "description": "Thank you for reading!\n",
      "author": [],
      "contents": "\nThank you again for having interest on our page!\nTo sum up, Gibbs Sampling is an alternative to random sampling to derive posterior samples in Bayesian Statistics. It is a way of continuously selecting conditional and dependent samples from an unknown population with multiple dimensions.\nThe main point of Gibbs sampling is used when we want to draw samples for multiple unknown parameters, it is more simpler and feasible to sample from conditional distributions than from the joint.\n\n\n\nBensi, Michelle, and Somayeh Mohammadi. 2020. “Multi-Mechanism Flood Hazard Assessment: Critical Review of Current Practice and Approaches Joint Probability Analysis of Flood Hazard View Project Probabilistic Flood Hazard Analysis View Project.” Oak Ridge National Laboratory. https://doi.org/10.13140/RG.2.2.28893.64484.\n\n\nGrinde, Kelsey. 2023. “Bayesian Vs Frequentist Philosophy.” macalester.voicethread.com; VoiceThread. https://macalester.voicethread.com/myvoice/thread/16827743/106003936/106003936.\n\n\nGundersen, Gregory. 2020. “Gibbs Sampling Is a Special Case of Metropolis–Hastings.” gregorygundersen.com. https://gregorygundersen.com/blog/2020/02/23/gibbs-sampling/.\n\n\nJohnson, Alicia A. Johnson, Miles Q. Ott, and Mine Dogucu. 2021. Bayes Rules! An Introduction to Applied Bayesian Modeling. www.bayesrulesbook.com; CRC Press. https://www.bayesrulesbook.com/index.html.\n\n\nLarsen, Richard J, and Morris L Marx. 2018. An Introduction to Mathematical Statistics and Its Applications. Pearson.\n\n\nLee, Chaeyoung. 2019. “Bayesian Inference for Mixed Model-Based Genome-Wide Analysis of Expression Quantitative Trait Loci by Gibbs Sampling.” Frontiers in Genetics 10 (March). https://doi.org/10.3389/fgene.2019.00199.\n\n\nLi, Jingyi Jessica. 2014. “STATS M254 / BIOINFO M271 / BIOMATH M271 (Spring 2014) - Jingyi Jessica Li.” www.stat.ucla.edu. http://www.stat.ucla.edu/~jingyi.li/stats-m254-spring-2014.html.\n\n\n———. 2021. “STATS M254 - Stat Methods in Comp Bio - Lecture 18 (Metropolis-Hasting Algorithm; Gibbs Sampler).” www.youtube.com. https://youtu.be/Jfwts3-0eEA.\n\n\nPritchard, Jonathan K., Matthew Stephens, Peter Donnelly, and Daniel Falush. 2007. “Inference of Population Structure Using Multilocus Genotype Data: Dominant Markers and Null Alleles.” Molecular Ecology Notes 7 (March): 574–78. https://doi.org/10.1111/j.1471-8286.2007.01758.x.\n\n\nritvikmath. 2021. “Gibbs Sampling : Data Science Concepts.” www.youtube.com. https://youtu.be/7LB1VHp4tLE.\n\n\nSrihari, Sargur. n.d. “Machine Learning Srihari 1 Gibbs Sampling.” Accessed April 30, 2023. https://cedar.buffalo.edu/~srihari/CSE574/Chap11/Ch11.4-Gibbs%20Sampling.pdf.\n\n\nSteorts, Rebecca. n.d. “Module 7: Introduction to Gibbs Sampling.” http://www2.stat.duke.edu/~rcs46/modern_bayes17/lecturesModernBayes17/lecture-7/07-gibbs.pdf.\n\n\nWicklin, Rick. 2015. “Plot the Conditional Distribution of the Response in a Linear Regression Model.” The DO Loop. https://blogs.sas.com/content/iml/2015/09/10/plot-distrib-reg-model.html.\n\n\nZvornicanin, Enes. 2023. “Introduction to Gibbs Sampling.” Baeldung CS. https://www.baeldung.com/cs/gibbs-sampling.\n\n\n\n\n",
      "last_modified": "2023-04-29T22:14:05-05:00"
    }
  ],
  "collections": []
}
